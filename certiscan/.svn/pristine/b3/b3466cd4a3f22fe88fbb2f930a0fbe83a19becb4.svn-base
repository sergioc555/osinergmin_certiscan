package com.certicom.certiscan.services;

import java.util.List;

import org.apache.ibatis.session.ExecutorType;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

import com.certicom.certiscan.commons.ServiceFinder;
import com.certicom.certiscan.domain.Expediente;
import com.certicom.certiscan.domain.ExpedienteDocumento;
import com.certicom.certiscan.domain.Log;
import com.certicom.certiscan.domain.Medios;
import com.certicom.certiscan.mapper.DocumentoPaginaMapper;
import com.certicom.certiscan.mapper.ExpedienteDocumentoMapper;
import com.certicom.certiscan.mapper.ExpedienteMapper;
import com.certicom.certiscan.mapper.ExpedienteTrackingMapper;
import com.certicom.certiscan.mapper.LogMapper;
import com.certicom.certiscan.mapper.MediosMapper;

public class MediosServices implements MediosMapper{

	MediosMapper mediosMapper = (MediosMapper)ServiceFinder.findBean("mediosMapper");

	@Override
	public Medios findById(Integer codigoMedios) throws Exception {
		// TODO Auto-generated method stub
		return mediosMapper.findById(codigoMedios);
	}

	@Override
	public List<Medios> findAll() throws Exception {
		// TODO Auto-generated method stub
		return mediosMapper.findAll();
	}

	@Override
	public void crearMedio(Medios cargo) throws Exception {
		// TODO Auto-generated method stub
		mediosMapper.crearMedio(cargo);
	}

	@Override
	public void actualizarMedio(Medios cargo) throws Exception {
		// TODO Auto-generated method stub
		mediosMapper.actualizarMedio(cargo);
	}

	@Override
	public void eliminarMedio(Integer cod_medio) throws Exception {
		// TODO Auto-generated method stub
		mediosMapper.eliminarMedio(cod_medio);
	}
	
	public void generarMedios(List<Medios> listMedios){
		
		try {	
		
			Boolean resultado = Boolean.FALSE;
			SqlSessionFactory sqlSessionFactory = (SqlSessionFactory) ServiceFinder.findBean("sqlSessionFactory");
			SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);
			ExpedienteDocumentoMapper daoObj1 = (ExpedienteDocumentoMapper) sqlSession.getMapper(ExpedienteDocumentoMapper.class);
			MediosMapper daoObj2 = (MediosMapper) sqlSession.getMapper(MediosMapper.class);
			ExpedienteTrackingMapper daoObj3 = (ExpedienteTrackingMapper) sqlSession.getMapper(ExpedienteTrackingMapper.class);
			ExpedienteMapper daoObj4 = (ExpedienteMapper) sqlSession.getMapper(ExpedienteMapper.class);
			//LogMapper daoObj5 = (LogMapper) sqlSession.getMapper(LogMapper.class);
			
			for (Medios medios : listMedios) {
				
				daoObj2.crearMedio(medios);
				
				Integer codigo = daoObj2.findMax();
				
				for (ExpedienteDocumento exped : medios.getListExpedienteDocumentos()) {
					
					exped.setId_medio(codigo);
					
					daoObj1.actualizarMedio(exped);
					
				}
				
			}
			
			} catch (Exception e) {
				// TODO: handle exception
			}
		
	}

	@Override
	public Integer findMax() throws Exception {
		// TODO Auto-generated method stub
		return mediosMapper.findMax();
	}
	
}
